{"version":3,"file":"static/js/787.19fca799.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://samurai-way/./src/Components/Profile/MyPosts/Posts/Post.module.css?3f5a","Components/Profile/MyPosts/Posts/Post.tsx","Components/Profile/MyPosts/AddPostsForm/AddPostsForm.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","HOC/AuthRedirectComponent.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__z7+In\",\"item\":\"ProfileInfo_item__5WtOU\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [status, setStatus] = useState<string>(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditeMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditeMode}>{props.status || 'No status!!!'} </span>\r\n                </div>\r\n            }\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateEditeMode} value={status}/>\r\n                </div>}\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../../Common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../Redux/ProfileReducer\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n\r\n}\r\nexport const ProfileInfo = ({profile, status, updateStatus}: ProfileInfoPropsType) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div><img className={s.image}\r\n                      src='https://th.bing.com/th/id/R.954fb2083d4558551f76256530fa7e21?rik=6PFqxPlFR7jJHA&riu=http%3a%2f%2fweknowyourdreams.com%2fimages%2fsamurai%2fsamurai-07.jpg&ehk=%2fIDimYnMP5aCufQmVxdGJrTpLTwEE2mTMG32M8uzGLY%3d&risl=&pid=ImgRaw&r=0'\r\n                      alt={'Profile'}/>\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div className={s.item}>\r\n                <img src={profile.photos.large} alt={\"avatar\"}/>\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>{profile.contacts.instagram}</div>\r\n                <div>{profile.lookingForAJobDescription}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__fxAN9\",\"MyPostsBlock\":\"MyPosts_MyPostsBlock__Ts8wX\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__GHkAr\",\"img\":\"Post_img__RkeMA\"};","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport const Post: React.FC<PostPropsType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.img}\r\n                 src='https://i.pinimg.com/736x/ed/c0/d8/edc0d87c0f024c849827d5b3d1c9bcfc--monkeys-warriors.jpg'\r\n                 alt={\"samurai\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like </span>{props.likeCount}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/validators\";\r\nimport {Textarea} from \"../../../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nexport type FormDataPostType = {\r\n    addNewPostBody: string;\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nexport const AddPostsForm = (props: InjectedFormProps<FormDataPostType>) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={'addNewPostBody'} component={Textarea} validate={[required, maxLength10]}/>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nexport const ReduxAddPostForm = reduxForm<FormDataPostType>({form: 'Profile Posts form'})(AddPostsForm)","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Posts/Post\";\r\nimport {ProfileCommonType} from \"./MyPostsContainer\";\r\nimport {ReduxAddPostForm} from \"./AddPostsForm/AddPostsForm\";\r\n\r\ntype ValuesPostType = {\r\n    addNewPostBody: string;\r\n}\r\n\r\nconst MyPosts = React.memo((props: ProfileCommonType) => {\r\n    const addNewPost = (values: ValuesPostType) => {\r\n        props.addPosts(values.addNewPostBody);\r\n        values.addNewPostBody = '';\r\n    }\r\n    return <div className={s.MyPostsBlock}>\r\n        <h3>My post</h3>\r\n        <div>\r\n            <ReduxAddPostForm onSubmit={addNewPost} />\r\n        </div>\r\n        <div className={s.posts}>\r\n            {\r\n                [...props.posts].reverse().map(el => (\r\n                    <Post key={el.id} message={el.message} likeCount={el.likeCount}/>))\r\n            }\r\n        </div>\r\n    </div>\r\n})\r\n\r\nexport default MyPosts;","import MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator, postsType} from \"../../../Redux/ProfileReducer\";\r\nimport {ReduxStateType} from \"../../../Redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStateToProfilePropsType = {\r\n    posts: Array<postsType>\r\n    messageForNewPost: string\r\n}\r\n\r\ntype MapDispatchToProfilePropsType = {\r\n    addPosts: (addNewPostBody: string) => void\r\n}\r\n\r\n\r\nexport type ProfileCommonType = MapStateToProfilePropsType & MapDispatchToProfilePropsType\r\n\r\nconst mapStateToProps = (state: ReduxStateType): MapStateToProfilePropsType => {\r\n\r\n    return {\r\n        messageForNewPost: state.profilePage.messageForNewPosts,\r\n        posts: state.profilePage.posts\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProfilePropsType => {\r\n    return {\r\n        addPosts: (NewPostBody: string) => {\r\n            dispatch(addPostActionCreator(NewPostBody))\r\n\r\n        }\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from 'react';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../Redux/ProfileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../Redux/reduxStore\";\r\nimport {getStatus, getUsersForProfile, ProfileType, updateStatus} from \"../../Redux/ProfileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AuthRedirectComponent} from \"../../HOC/AuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\nclass ProfileContainer extends React.Component<PropsParamsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = String(this.props.myUserId);\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            } // another option redirect\r\n        }\r\n        this.props.getUsersForProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    myUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUsersForProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\nexport type CommonProfileType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\ntype PropsParamsType = RouteComponentProps<PathParamsType> & CommonProfileType;\r\n\r\n\r\nlet mapStateToProps = (state: ReduxStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        myUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUsersForProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    AuthRedirectComponent\r\n)\r\n(ProfileContainer)","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {ReduxStateType} from \"../Redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function AuthRedirectComponent<T extends JSX.IntrinsicAttributes>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","src","alt","photos","large","fullName","aboutMe","contacts","instagram","lookingForAJobDescription","Preloader","Post","message","likeCount","maxLength10","maxLengthCreator","ReduxAddPostForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","React","values","addPosts","addNewPostBody","posts","reverse","map","el","id","MyPostsContainer","connect","state","messageForNewPost","profilePage","messageForNewPosts","dispatch","NewPostBody","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","String","myUserId","history","push","getUsersForProfile","getStatus","compose","auth","isAuth","withRouter","AuthRedirectComponent","mapStateToProps","Component","restProps","to"],"sourceRoot":""}